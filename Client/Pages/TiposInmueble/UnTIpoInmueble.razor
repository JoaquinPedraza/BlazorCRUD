@page "/TipoInmueble"
@page "/TipoInmueble/{Id:int}"
@using BlazorCRUD.Server.Models;
@inject ITipoInmuebleServices TipoInmuebleServices
@inject NavigationManager NavigationManager

<h3>UnTIpoInmueble</h3>

@if (Id == null)
{
        <PageTitle>Create a new tipo de inmueble</PageTitle>
    <h3>Create a new tipo de inmueble</h3>
}
else
{
    <PageTitle>Edit @tipoInmueble.IdTipoInmueble </PageTitle>
    <h3>Edit @tipoInmueble.IdTipoInmueble</h3>
}

<EditForm Model="tipoInmueble" OnSubmit="HandleSubmit">

    <div>
        <label for="desc_tipoInmueble">Descripcion del tipo de inmueble</label>
        <InputText id="desc_tipoInmueble" @bind-Value="tipoInmueble.DescInmueble" class="form-control"></InputText>
    </div>
    <br />

    @if (Id == null)
    {
            <button type="submit" class="btn btn-primary">Save New Tipo de Inmueble</button>
    }
    else
    {
            <button type="submit" class="btn btn-primary">Update tipo de inmueble</button>
            <button type="button" class="btn btn-danger" @onclick="DeleteTipoInmueble">Delete tipo de inmueble</button>
    }
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    TipoInmueble tipoInmueble = new TipoInmueble { };

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            tipoInmueble = await TipoInmuebleServices.GetTipoInmueble((byte)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await TipoInmuebleServices.PostTipoInmueble(tipoInmueble);
        }
        else
        {
            await TipoInmuebleServices.PutTipoInmueble(tipoInmueble.IdTipoInmueble, tipoInmueble);
        }
    }

    async Task DeleteTipoInmueble()
    {
        await TipoInmuebleServices.DeleteTipoInmueble(tipoInmueble.IdTipoInmueble);
    }


}
